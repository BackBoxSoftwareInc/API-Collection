{
	"info": {
		"_postman_id": "f9f0d334-c368-439c-9e8b-a8737ac1ce5f",
		"name": "BackBox External API",
		"description": "### **BackBox External API Postman Library**\n\nLibrary Version: 1.0\n\nBackBox Version: 7.5.0.7\n\nThe intention here is to make the API more accessible by providing some structured examples that you can use to build out your automation workflows.\n\n#### **Requirements and recommendations**\n\nTo avoid having to set and call cookies it is recommended you install the Postman Interceptor browser plugin and allow Postman to share cookies with your browser. You can then login to your BackBox server web UI and grab the cookies you need before sending API calls from Postman.\n\nI would strongly recommend you use the BackBox UI to generate an API Key, and use that for authentication here. You will see the authorization at the top level is set up for API key, and all calls below that inherit those values.\n\nSet the {{bb-server}} variable to your BackBox server\n\n#### **Disclaimers and caveats!**\n\nThis is very much work in progress, please feel free to provide feedback directly to me at [tony@backbox.com](https://mailto:tony@backbox.com) for now. Once we get our community up and running we will change feedback mechanisms.\n\nPlease also refer to the Swagger documentation on your BackBox server:\n\nhttps:///rest/data/swagger-ui.html#/\n\nThe following currently available external API calls are not included in this library:\n\n1. Discovery: There are additional discovery APIs being moved to the external library which made it pointless adding these two calls for now.\n    1. addDiscoveryJob\n    2. updateDiscoveryJob\n2. getNetDBSupermacInfo: I need to better understand the use case for this\n3. getTaskJobsPageQueue: Will likely be deprecated in favour of a better call\n4. deleteReport: This appears to not be working and has been raised with engineering\n5. addAuthenticationTemplate: I need to understand the minimum requirements for this call\n    \n\nAs I find time I will work with engineering to improve the documentation for each call (complete documentation section, currently untouched).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32094627"
	},
	"item": [
		{
			"name": "General",
			"item": [
				{
					"name": "Cookie",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cluster State",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "AUTH",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "94ZfqQgvSxgfZyYUyEp5yb52vyrza7WW3XgHIVpQpkU3CzmYwWLEyg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/getClusterState",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"getClusterState"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get License Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/licenses",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"licenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "CyberArk Test",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"testing\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/CyberArkTest",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"CyberArkTest"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "Get All Devices Device Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/token/api/devices",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"token",
								"api",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Details by Device ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/device/3",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"device",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Details by Device IP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/devicesByIp/172.255.0.222/get",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"devicesByIp",
								"172.255.0.222",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Details by Site ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/devicesBySite/2",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"devicesBySite",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Details by External ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/devicesbyExternalId/132",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"devicesbyExternalId",
								"132"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Device",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n      \"deviceName\": \"Cisco C8000\",\n      \"siteId\": 0,\n      \"host\": \"10.0.68.248\",\n      \"vendorId\": -5,\n      \"productId\": -56,\n      \"versionId\": -97,\n      \"optionId\": -9000314,\n      \"groupId\": 0,\n      \"retentionId\": 0,\n      \"port\": 22,\n      \"debugMode\": false,\n      \"authenticationType\": \"1\",\n      \"authenticationTemplateIds\": null,\n      \"userName\": \"admin\",\n      \"password\": \"admin\",\n      \"su\": \"\",\n      \"suPassword\": \"admin\",\n      \"prompt\": null,\n      \"commandUserName\": \"\",\n      \"commandPassword\": \"safeway_blank\",\n      \"snmpCommunity\": \"safeway_blank\",\n      \"snmpVersion\": \"\",\n      \"serverIp\": null,\n      \"agentId\": 0,\n      \"backupSizeDeviation\": false,\n      \"natHost\": \"\",\n      \"description\": null,\n      \"backupSizeDeviationPercentage\": null,\n      \"externalId\": \"FD12345\",\n      \"enableAccess\": true,\n      \"inMaintenanceMode\": false,\n      \"enableIntelliChecks\": true,\n      \"collected\": true,\n      \"compareExceptions\": null\n    }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/device",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deviceName\": \"bb-aws-pan-01\",\n    \"siteId\": 0,\n    \"host\": \"172.31.41.113\",\n    \"vendorId\": -48,\n    \"productId\": -113,\n    \"versionId\": -455,\n    \"optionId\": -9000082,\n    \"groupId\": 0,\n    \"retentionId\": 0,\n    \"port\": 22,\n    \"debugMode\": false,\n    \"authenticationType\": \"1\",\n    \"authenticationTemplateIds\": [],\n    \"userName\": \"admin\",\n    \"password\": \"safeway_blank\",\n    \"su\": \"\",\n    \"suPassword\": \"safeway_blank\",\n    \"prompt\": null,\n    \"commandUserName\": \"\",\n    \"commandPassword\": \"safeway_blank\",\n    \"snmpCommunity\": \"safeway_blank\",\n    \"snmpVersion\": \"\",\n    \"serverIp\": null,\n    \"agentId\": 0,\n    \"backupSizeDeviation\": true,\n    \"natHost\": \"\",\n    \"description\": \"\",\n    \"backupSizeDeviationPercentage\": null,\n    \"externalId\": null,\n    \"enableAccess\": true,\n    \"inMaintenanceMode\": false,\n    \"enableIntelliChecks\": true,\n    \"collected\": true,\n    \"compareExceptions\": null,\n    \"notes\": null,\n    \"deviceAccessDetails\": {\n        \"connectionType\": \"SSH\",\n        \"port\": 22,\n        \"overridePort\": false,\n        \"securityProtocol\": \"NONE\",\n        \"localAdmin\": false,\n        \"urlPostfix\": \"/\",\n        \"webBrowser\": null\n    },\n    \"deviceId\": 47,\n    \"notesId\": 0,\n    \"groupName\": null,\n    \"vendorName\": \"Palo Alto Networks\",\n    \"productName\": \"PA Series\",\n    \"versionName\": \"Version 4 and above\",\n    \"siteName\": \"Global\",\n    \"optionName\": \"cURL (Device-State)\",\n    \"productType\": null,\n    \"productTypeName\": null,\n    \"lastBackupDate\": 1702652976000,\n    \"lastBackupDateToShow\": \"2023-12-15 15:09:36.0 GMT\",\n    \"lastBackupId\": 252219,\n    \"retention\": null,\n    \"agentName\": null,\n    \"backupCustomField1\": \"\",\n    \"backupCustomField2\": \"\",\n    \"intelliChecksStatus\": \"complex\",\n    \"agentGroupId\": 0,\n    \"deviceCustomFields\": {},\n    \"optionCustomFields\": {},\n    \"lastSuccessfulBackupDate\": null,\n    \"configurationChanged\": \"no\",\n    \"discoverySnmpRespond\": false,\n    \"backupSize\": null,\n    \"failureReason\": null,\n    \"backupFailureRetry\": 0,\n    \"backupFailureRetrySleepTime\": 0,\n    \"cloudVault\": null,\n    \"technicalSurveyItems\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/device",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Device Backup",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/runDevice/3",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"runDevice",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Multiple Device Backups",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    4,\n    6\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/runDevices",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"runDevices"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Device Groups",
			"item": [
				{
					"name": "Get All Device Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "devicesIDs",
									"value": "45,47",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/devices/groups/getDeviceGroupsList",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"devices",
								"groups",
								"getDeviceGroupsList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices in Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/devices/groups/getDevicesInGroup/3",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"devices",
								"groups",
								"getDevicesInGroup",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Device Group",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"testGroup2\",\n  \"deviceList\": \"\",\n  \"group_NAME\": \"testGroup2\",\n  \"site_ID\": 0\n}"
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/devices/groups/addDeviceGroup",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"devices",
								"groups",
								"addDeviceGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Devices to Group",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    3,\n    35\n]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/devices/groups/addDevicesToGroup/groupId/3",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"devices",
								"groups",
								"addDevicesToGroup",
								"groupId",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device Group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/devices/groups/deleteDeviceGroup/groupId/4",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"devices",
								"groups",
								"deleteDeviceGroup",
								"groupId",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Devices from Group",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    3,\n    35\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/devices/groups/removeDevicesFromGroup/",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"devices",
								"groups",
								"removeDevicesFromGroup",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication Templates",
			"item": [
				{
					"name": "Count of Auth Templates",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/token/api/authenticationTemplates/size",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"token",
								"api",
								"authenticationTemplates",
								"size"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show All Auth Templates",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/token/api/authenticationTemplates",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"token",
								"api",
								"authenticationTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show Auth Template by ID",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/token/api/authenticationTemplate/7",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"token",
								"api",
								"authenticationTemplate",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Auth Template (not working)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"STANDARD\",\n    \"password\": \"TEST\",\n    \"site_ID\": 3,\n    \"name\": \"Choam TEST\",\n    \"user_NAME\": \"TESTuser\",\n    \"description\": \"TEST\",\n    \"extra_PASSWORD\": \"EXTRA\",\n    \"snmp_COMMUNITY\": \"snmp123\",\n    \"create_DATE\": \"\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/authenticationTemplate",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"authenticationTemplate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Auth Template",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"STANDARD\",\n    \"appId\": \"BackBox\",\n    \"passwordSafe\": \"\",\n    \"passwordFolder\": \"\",\n    \"passwordObject\": \"\",\n    \"extraPasswordSafe\": \"\",\n    \"extraPasswordFolder\": \"\",\n    \"extraPasswordObject\": \"\",\n    \"wallixAccoutType\": \"DEVICE\",\n    \"wallixApiUsername\": \"\",\n    \"wallixApiKey\": \"\",\n    \"wallixDomain\": \"\",\n    \"wallixAccount\": \"\",\n    \"wallixApplication\": \"\",\n    \"wallixExtraAccoutType\": \"DEVICE\",\n    \"wallixExtraDomain\": \"\",\n    \"wallixExtraAccount\": \"\",\n    \"wallixExtraApplication\": \"\",\n    \"arconTargetType\": \"\",\n    \"arconExtraTargetType\": \"\",\n    \"apiUsername\": \"\",\n    \"apiPassword\": \"\",\n    \"apiExtraUsername\": \"\",\n    \"password\": \"safeway_blank\",\n    \"site_ID\": 3,\n    \"name\": \"Choam Cisco\",\n    \"site_NAME\": \"Global\",\n    \"user_NAME\": \"admin\",\n    \"description\": \"Adding description\",\n    \"create_DATE\": \"2023-11-21\",\n    \"extra_PASSWORD\": \"safeway_blank\",\n    \"in_USE\": 0,\n    \"snmp_COMMUNITY\": \"safeway_blank\",\n    \"modify_DATE\": \"2023-11-21\",\n    \"id\": 7\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/authenticationTemplate",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"authenticationTemplate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Auth Template by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://majors.demo.backbox.com/rest/data/api/authenticationTemplate/11",
							"protocol": "https",
							"host": [
								"majors",
								"demo",
								"backbox",
								"com"
							],
							"path": [
								"rest",
								"data",
								"api",
								"authenticationTemplate",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show Auth Template by Site ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/getAllAuthenticationTemplatesBySite/3",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"getAllAuthenticationTemplatesBySite",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sites",
			"item": [
				{
					"name": "Get Count of Sites",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/sites/size",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"sites",
								"size"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Sites",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/sites",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Site by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/site/5",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"site",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Site",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 6,\n    \"name\": \"Test Site\",\n    \"contactName\": \"\",\n    \"contactPhone\": \"\",\n    \"contactMail\": \"\",\n    \"contactAddress\": \"\",\n    \"contactNotes\": \"\",\n    \"numOfDevices\": 0,\n    \"numOfUsers\": 0,\n    \"backupsSimpleAllowed\": 0,\n    \"backupsComplexAllowed\": 0,\n    \"accessAllowed\": 0,\n    \"backupsSimpleUsed\": 0,\n    \"backupsComplexUsed\": 0,\n    \"intelliChecksSimpleAllowed\": 0,\n    \"intelliChecksComplexAllowed\": 0,\n    \"intelliChecksSimpleUsed\": 0,\n    \"intelliChecksComplexUsed\": 0,\n    \"accessUsed\": 0,\n    \"retentionId\": 0,\n    \"retention\": null,\n    \"backupSizeDeviationPercentage\": null,\n    \"useCustomLogo\": false,\n    \"accessRules\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/site",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Site",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 6,\n    \"name\": \"Test Site2\",\n    \"contactName\": \"\",\n    \"contactPhone\": \"\",\n    \"contactMail\": \"\",\n    \"contactAddress\": \"\",\n    \"contactNotes\": \"\",\n    \"numOfDevices\": 0,\n    \"numOfUsers\": 0,\n    \"backupsSimpleAllowed\": 0,\n    \"backupsComplexAllowed\": 0,\n    \"accessAllowed\": 0,\n    \"backupsSimpleUsed\": 0,\n    \"backupsComplexUsed\": 0,\n    \"intelliChecksSimpleAllowed\": 0,\n    \"intelliChecksComplexAllowed\": 0,\n    \"intelliChecksSimpleUsed\": 0,\n    \"intelliChecksComplexUsed\": 0,\n    \"accessUsed\": 0,\n    \"retentionId\": 0,\n    \"retention\": null,\n    \"backupSizeDeviationPercentage\": null,\n    \"useCustomLogo\": false,\n    \"accessRules\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/site",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Site",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/site/6",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"site",
								"6"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Backups",
			"item": [
				{
					"name": "Get Backup Status by Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/backupStatus?filter=byType",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"backupStatus"
							],
							"query": [
								{
									"key": "filter",
									"value": "byType"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Backup Status by Site",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/backupStatus?filter=bySite",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"backupStatus"
							],
							"query": [
								{
									"key": "filter",
									"value": "bySite"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Backup Status by Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/backupStatus?filter=byGroup",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"backupStatus"
							],
							"query": [
								{
									"key": "filter",
									"value": "byGroup"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Config Status (previous)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/configStatus/{filterType}?filterType=previous",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"configStatus",
								"{filterType}"
							],
							"query": [
								{
									"key": "filterType",
									"value": "previous"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Config Status (baseline)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/configStatus/{filterType}?filterType=baseline",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"configStatus",
								"{filterType}"
							],
							"query": [
								{
									"key": "filterType",
									"value": "baseline"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Config Status (startup)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/configStatus/{filterType}?filterType=startup",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"configStatus",
								"{filterType}"
							],
							"query": [
								{
									"key": "filterType",
									"value": "startup"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Devices Last Backup History",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/history?modifyDate=1706061602000",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"history"
							],
							"query": [
								{
									"key": "modifyDate",
									"value": "1706061602000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Backup Job Info by JobID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://majors.demo.backbox.com/rest/data/api/backups/jobs/getDevices/backupJobId/46",
							"protocol": "https",
							"host": [
								"majors",
								"demo",
								"backbox",
								"com"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"jobs",
								"getDevices",
								"backupJobId",
								"46"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Devices to Job by External ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    863,\n    132\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://majors.demo.backbox.com/rest/data/api/backups/jobs/addDevicesByExternalIds/backupJobId/51",
							"protocol": "https",
							"host": [
								"majors",
								"demo",
								"backbox",
								"com"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"jobs",
								"addDevicesByExternalIds",
								"backupJobId",
								"51"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Devices to Job by Device ID",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    3,\n    6\n]"
						},
						"url": {
							"raw": "https://majors.demo.backbox.com/rest/data/api/backups/jobs/addDevicesByIds/backupJobId/51",
							"protocol": "https",
							"host": [
								"majors",
								"demo",
								"backbox",
								"com"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"jobs",
								"addDevicesByIds",
								"backupJobId",
								"51"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Devices to Job by IP",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"172.255.0.87\",\n    \"172.255.0.222\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/jobs/addDevicesByIps/backupJobId/51",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"jobs",
								"addDevicesByIps",
								"backupJobId",
								"51"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Devices from Job by External ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    863,\n    132\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/jobs/deleteDevicesByExternalIds/backupJobId/51",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"jobs",
								"deleteDevicesByExternalIds",
								"backupJobId",
								"51"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Devices from Job by Device ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    3,\n    6\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/jobs/deleteDevicesByIds/backupJobId/51",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"jobs",
								"deleteDevicesByIds",
								"backupJobId",
								"51"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Devices from Job by IP",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"172.255.0.87\",\n    \"172.255.0.222\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/jobs/deleteDevicesByIps/backupJobId/51",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"jobs",
								"deleteDevicesByIps",
								"backupJobId",
								"51"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Backup Job by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/job/46",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"job",
								"46"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Backup Jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/jobs",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Backup Job",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scheduleIds\": [],\n    \"itemsIN_BackupJob\": [\n        {\n            \"siteId\": 3,\n            \"jobId\": 51,\n            \"itemId\": 3,\n            \"itemType\": 0,\n            \"itemName\": \"bb-aws-csc-01\",\n            \"itemHost\": \"172.255.0.14\",\n            \"groupId\": 0,\n            \"vendorName\": \"Cisco Systems Inc\",\n            \"productName\": \"Router\",\n            \"siteName\": \"Choam\",\n            \"itemProductType\": \"simple\",\n            \"groupName\": \"testy\",\n            \"port\": 0,\n            \"itemDescription\": null,\n            \"configurationChanged\": false,\n            \"externalId\": \"863\",\n            \"inventoryModel\": \"Model/Memory: cisco C8000V (VXE) processor (revision VXE) with 2257251K/3075K bytes of memory.\\n\",\n            \"inventoryVersion\": \"IOS Version: Cisco IOS XE Software, Version 17.06.05\\n\"\n        },\n        {\n            \"siteId\": 4,\n            \"jobId\": 51,\n            \"itemId\": 6,\n            \"itemType\": 0,\n            \"itemName\": \"bb-aws-asa-01\",\n            \"itemHost\": \"172.255.0.87\",\n            \"groupId\": 0,\n            \"vendorName\": \"Cisco Systems Inc\",\n            \"productName\": \"ASA\",\n            \"siteName\": \"Cyberdyne Systems\",\n            \"itemProductType\": \"complex\",\n            \"groupName\": null,\n            \"port\": 0,\n            \"itemDescription\": null,\n            \"configurationChanged\": false,\n            \"externalId\": \"1472\",\n            \"inventoryModel\": \"Hardware Model: ASAv\\n\",\n            \"inventoryVersion\": \"Software Version: Cisco Adaptive Security Appliance Software Version 9.19(1)\\n\"\n        },\n        {\n            \"siteId\": 3,\n            \"jobId\": 51,\n            \"itemId\": 9,\n            \"itemType\": 0,\n            \"itemName\": \"bb-aws-bip-01\",\n            \"itemHost\": \"172.255.0.222\",\n            \"groupId\": 0,\n            \"vendorName\": \"F5\",\n            \"productName\": \"BigIP Series\",\n            \"siteName\": \"Choam\",\n            \"itemProductType\": \"complex\",\n            \"groupName\": \"testy\",\n            \"port\": 0,\n            \"itemDescription\": null,\n            \"configurationChanged\": false,\n            \"externalId\": \"132\",\n            \"inventoryModel\": \"Model: BIG-IP Virtual Edition\\n\",\n            \"inventoryVersion\": \"Version: 14.1.5.3\\n\"\n        }\n    ],\n    \"type\": \"BACKUP\",\n    \"amountOfDevices\": 0,\n    \"tasksInTaskJob\": [],\n    \"sendDiffFilesInNotification\": false,\n    \"showExcludedLines\": false,\n    \"scheduleNames\": [],\n    \"nextExecutionDate\": null,\n    \"notificationName\": null,\n    \"lastStatus\": null,\n    \"runMode\": \"parallel\",\n    \"exhaustMode\": \"devicesOnTask\",\n    \"abortRunOnError\": true,\n    \"attachedTaskJobId\": null,\n    \"attachedStatusId\": \"ALL\",\n    \"disabledTaskJob\": false,\n    \"approvalsList\": null,\n    \"ownerId\": 0,\n    \"ownerName\": null,\n    \"site_ID\": 0,\n    \"name\": \"test\",\n    \"site_NAME\": null,\n    \"description\": \"testing job update by api\",\n    \"notification_ID\": 0,\n    \"disposable\": false,\n    \"backup_JOB_ID\": 51,\n    \"showUnavailableInNotification\": false,\n    \"groupName\": null,\n    \"excludedFromCollectionOnOutput\": false,\n    \"inGroup\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/job",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"job"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Backup Job",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scheduleIds\": [],\n    \"itemsIN_BackupJob\": [\n        {\n            \"siteId\": 3,\n            \"jobId\": 52,\n            \"itemId\": 3,\n            \"itemType\": 0,\n            \"itemName\": \"bb-aws-csc-01\",\n            \"itemHost\": \"172.255.0.14\",\n            \"groupId\": 0,\n            \"vendorName\": \"Cisco Systems Inc\",\n            \"productName\": \"Router\",\n            \"siteName\": \"Choam\",\n            \"itemProductType\": \"simple\",\n            \"groupName\": \"testy\",\n            \"port\": 0,\n            \"itemDescription\": null,\n            \"configurationChanged\": false,\n            \"externalId\": \"863\",\n            \"inventoryModel\": \"Model/Memory: cisco C8000V (VXE) processor (revision VXE) with 2257251K/3075K bytes of memory.\\n\",\n            \"inventoryVersion\": \"IOS Version: Cisco IOS XE Software, Version 17.06.05\\n\"\n        },\n        {\n            \"siteId\": 4,\n            \"jobId\": 52,\n            \"itemId\": 6,\n            \"itemType\": 0,\n            \"itemName\": \"bb-aws-asa-01\",\n            \"itemHost\": \"172.255.0.87\",\n            \"groupId\": 0,\n            \"vendorName\": \"Cisco Systems Inc\",\n            \"productName\": \"ASA\",\n            \"siteName\": \"Cyberdyne Systems\",\n            \"itemProductType\": \"complex\",\n            \"groupName\": null,\n            \"port\": 0,\n            \"itemDescription\": null,\n            \"configurationChanged\": false,\n            \"externalId\": \"1472\",\n            \"inventoryModel\": \"Hardware Model: ASAv\\n\",\n            \"inventoryVersion\": \"Software Version: Cisco Adaptive Security Appliance Software Version 9.19(1)\\n\"\n        },\n        {\n            \"siteId\": 3,\n            \"jobId\": 52,\n            \"itemId\": 9,\n            \"itemType\": 0,\n            \"itemName\": \"bb-aws-bip-01\",\n            \"itemHost\": \"172.255.0.222\",\n            \"groupId\": 0,\n            \"vendorName\": \"F5\",\n            \"productName\": \"BigIP Series\",\n            \"siteName\": \"Choam\",\n            \"itemProductType\": \"complex\",\n            \"groupName\": \"testy\",\n            \"port\": 0,\n            \"itemDescription\": null,\n            \"configurationChanged\": false,\n            \"externalId\": \"132\",\n            \"inventoryModel\": \"Model: BIG-IP Virtual Edition\\n\",\n            \"inventoryVersion\": \"Version: 14.1.5.3\\n\"\n        }\n    ],\n    \"type\": \"BACKUP\",\n    \"amountOfDevices\": 0,\n    \"tasksInTaskJob\": [],\n    \"sendDiffFilesInNotification\": false,\n    \"showExcludedLines\": false,\n    \"scheduleNames\": [],\n    \"nextExecutionDate\": null,\n    \"notificationName\": null,\n    \"lastStatus\": null,\n    \"runMode\": \"parallel\",\n    \"exhaustMode\": \"devicesOnTask\",\n    \"abortRunOnError\": true,\n    \"attachedTaskJobId\": null,\n    \"attachedStatusId\": \"ALL\",\n    \"disabledTaskJob\": false,\n    \"approvalsList\": null,\n    \"ownerId\": 0,\n    \"ownerName\": null,\n    \"site_ID\": 0,\n    \"name\": \"test2\",\n    \"site_NAME\": null,\n    \"description\": \"testing 2\",\n    \"notification_ID\": 0,\n    \"disposable\": false,\n    \"backup_JOB_ID\": 52,\n    \"showUnavailableInNotification\": false,\n    \"groupName\": null,\n    \"excludedFromCollectionOnOutput\": false,\n    \"inGroup\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/job",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"job"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Backup Job",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/job/run/51",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"job",
								"run",
								"51"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Last Job Run Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/job/status/backup/51",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"job",
								"status",
								"backup",
								"51"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Backup Job",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/job/52",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"job",
								"52"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Backup Jobs by Site ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/jobs/allJobsBySite/2",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"jobs",
								"allJobsBySite",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Scheduled Backup Jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/jobs/allScheduleJobs",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"jobs",
								"allScheduleJobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Multiple Backup Jobs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    51,\n    53\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/jobs/run",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"jobs",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Backup Trail Log Download Link by Backup ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/downloadLog/link/257379",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"downloadLog",
								"link",
								"257379"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Backup Trail Log by Backup ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/downloadLog/257379",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"downloadLog",
								"257379"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Download Link for File from Backup by Backup ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/download/link/257379/ifconfig.txt.enc",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"download",
								"link",
								"257379",
								"ifconfig.txt.enc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download File from Backup by Backup ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/download/257379/ifconfig.txt.enc",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"download",
								"257379",
								"ifconfig.txt.enc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get all Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task by Task ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/task/63",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"task",
								"63"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Task",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 64,\n    \"name\": \"Test task\",\n    \"description\": \"Testing\",\n    \"predefined\": false,\n    \"site_ID\": 0,\n    \"siteName\": null,\n    \"sessionId\": 1435,\n    \"listOfCommands\": [\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 1,\n            \"command_TYPE\": \"internal\",\n            \"command\": \"add_firewall_rule %%SCP_SERVER%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [],\n            \"wait_FOR\": \"\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 0,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32887\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 2,\n            \"command_TYPE\": \"local\",\n            \"command\": \"cd %%DBL%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32888\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 3,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo %%DEVICE_NAME%% | cut -d- -f1\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Get customer abbreviation\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%CUST_ABBR%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32889\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 4,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo %%SCP_PATH%%/\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SCP_PATH%%\",\n                    \"arg2\": \"\",\n                    \"condition\": \"isnotempty\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SCP_PATH1%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32890\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 5,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SCP_PATH%%\",\n                    \"arg2\": \"\",\n                    \"condition\": \"isempty\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SCP_PATH1%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32891\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 6,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo \\\"-o StrictHostKeyChecking=no\\\"\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set variable if we do not want to check ssh keys\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%CHECK_KEYS%%\",\n                    \"arg2\": \"No\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%ADD_KEYCHECK%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32892\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 7,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set empty variable if we want to check ssh keys\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%CHECK_KEYS%%\",\n                    \"arg2\": \"Yes\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%ADD_KEYCHECK%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32893\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 8,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo --insecure\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set --insecure flag\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%INSECURE%%\",\n                    \"arg2\": \"Yes\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SEC_FLAG%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32894\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 9,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Don't set --insecure flag\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%INSECURE%%\",\n                    \"arg2\": \"No\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SEC_FLAG%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32895\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 10,\n            \"command_TYPE\": \"local\",\n            \"command\": \"curl -u %%PASSWORD%%: https://%%HOST%%/api/v1/system/system-information -i %%SEC_FLAG%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Grab system information to test if we need insecure flag\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"sys-info.out\",\n            \"output_TYPE\": \"file\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32896\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 11,\n            \"command_TYPE\": \"local\",\n            \"command\": \"grep Problem sys-info.out\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Check to see if we need the insecure flag\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%NEED_INSECURE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32897\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": true,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": \"failure\",\n            \"queue\": 12,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo Certificate error, please fix or set insecure flag\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Fail on cert error\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%NEED_INSECURE%%\",\n                    \"arg2\": \"Problem\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": \"echo Certificate error, please fix or set insecure flag\",\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32898\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 13,\n            \"command_TYPE\": \"local\",\n            \"command\": \"awk '$1 == \\\"HTTP/1.1\\\" {print $2}' sys-info.out\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Get HTTP response code\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%HTTP_RESP%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32899\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": true,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": \"failure\",\n            \"queue\": 14,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo Bad response from cURL call\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Fail if we don't get a 200\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%HTTP_RESP%%\",\n                    \"arg2\": \"200\",\n                    \"condition\": \"notcontains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": \"echo Bad response from cURL call, response code  %%HTTP_RESP%%\",\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32900\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 15,\n            \"command_TYPE\": \"local\",\n            \"command\": \"date --date=\\\"%%NUM_DAYS%% day ago\\\" '+%Y-%m-%d'\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set begin date\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%BEGIN_DATE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32901\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 16,\n            \"command_TYPE\": \"local\",\n            \"command\": \"date '+%Y-%m-%d'\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set end date\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%END_DATE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32902\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 17,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo PulseSecure_%%LOG_TYPE%%_Log_%%DEVICE_NAME%%_%%BEGIN_DATE%%_%%END_DATE%%.txt\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set logfile name\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%LOG_FILE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32903\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 18,\n            \"command_TYPE\": \"local\",\n            \"command\": \"curl -u %%PASSWORD%%: --location 'https://%%HOST%%/api/v1/logs/%%LOG_TYPE%%' --header \\\"Content-Type: application/json\\\" --data '{\\\"action\\\":\\\"fetch\\\", \\\"lines\\\": 3, \\\"query\\\": \\\"id != ('\\\\''SYS10306'\\\\'' or '\\\\''NWC13978'\\\\'' or '\\\\''NWC13979'\\\\'')\\\",\\\"filter\\\": \\\"Standard\\\",\\\"begin-date\\\": \\\"%%BEGIN_DATE%%\\\",\\\"end-date\\\": \\\"%%END_DATE%%\\\"}' --insecure\",\n            \"hide_OUTPUT\": true,\n            \"description\": \"Check for empty log file\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%LOG_CHECK%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32904\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": true,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": \"failure\",\n            \"queue\": 19,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo Log file is empty\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Fail if log file is empty\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%LOG_CHECK%%\",\n                    \"arg2\": \"empty\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": \"%%LOG_TYPE%% log file is empty\",\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32905\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 20,\n            \"command_TYPE\": \"local\",\n            \"command\": \"curl -u %%PASSWORD%%: --location 'https://%%HOST%%/api/v1/logs/%%LOG_TYPE%%' --header \\\"Content-Type: application/json\\\" --data '{\\\"action\\\":\\\"save\\\",\\\"query\\\": \\\"id != ('\\\\''SYS10306'\\\\'' or '\\\\''NWC13978'\\\\'' or '\\\\''NWC13979'\\\\'')\\\",\\\"filter\\\": \\\"Standard\\\",\\\"begin-date\\\": \\\"%%BEGIN_DATE%%\\\",\\\"end-date\\\": \\\"%%END_DATE%%\\\"}' --insecure --output %%LOG_FILE%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Get Log File\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 5,\n            \"session_ID\": 1324,\n            \"id\": 32906\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 21,\n            \"command_TYPE\": \"local\",\n            \"command\": \"gzip -9 %%LOG_FILE%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Compress log file\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32907\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 22,\n            \"command_TYPE\": \"local\",\n            \"command\": \"ssh %%ADD_KEYCHECK%% %%SCP_USER%%@%%SCP_SERVER%% 'mkdir %%SCP_PATH1%%%%CUST_ABBR%%'\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Create remote directory if not already there\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"assword\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"yes/no\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SSH_RESPONSE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32908\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 23,\n            \"command_TYPE\": \"local\",\n            \"command\": \"yes\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Send yes if we need to\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SSH_RESPONSE%%\",\n                    \"arg2\": \"yes/no\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"%%CURRENT_PROMPT%%\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"assword\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SSH_RESPONSE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32909\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 24,\n            \"command_TYPE\": \"local\",\n            \"command\": \"%%SCP_PASSWD%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Send SSH password\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SSH_RESPONSE%%\",\n                    \"arg2\": \"assword:\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"%%CURRENT_PROMPT%%\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%MKDIR_CHECK%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32910\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": true,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": \"failure\",\n            \"queue\": 25,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo Cannot create directory %%SCP_PATH1%%%%CUST_ABBR%% on SCP server\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%MKDIR_CHECK%%\",\n                    \"arg2\": \"cannot\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": \"Cannot create directory %%SCP_PATH1%%%%CUST_ABBR%% on SCP server\",\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32911\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 26,\n            \"command_TYPE\": \"local\",\n            \"command\": \"scp %%ADD_KEYCHECK%% %%LOG_FILE%%.gz %%SCP_USER%%@%%SCP_SERVER%%:%%SCP_PATH1%%%%CUST_ABBR%%/\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"SCP logs to remote server\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"assword\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"yes/no\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SCP_RESPONSE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32912\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 27,\n            \"command_TYPE\": \"local\",\n            \"command\": \"yes\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Send yes if we need to\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SCP_RESPONSE%%\",\n                    \"arg2\": \"yes/no\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"%%CURRENT_PROMPT%%\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"assword\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SCP_RESPONSE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32913\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 28,\n            \"command_TYPE\": \"local\",\n            \"command\": \"%%SCP_PASSWD%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Send SCP password if we need to\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SCP_RESPONSE%%\",\n                    \"arg2\": \"assword:\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"%%CURRENT_PROMPT%%\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32914\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 29,\n            \"command_TYPE\": \"local\",\n            \"command\": \"rm %%LOG_FILE%%.gz\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Clean up\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32915\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 30,\n            \"command_TYPE\": \"local\",\n            \"command\": \"curl -u %%PASSWORD%%: -H \\\"Content-Type: application/json\\\" -X PUT https://%%HOST%%/api/v1/logs/%%LOG_TYPE%% -d '{\\\"action\\\":\\\"clear\\\"}' %%SEC_FLAG%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Clear log\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%CLEAR_LOGS%%\",\n                    \"arg2\": \"Yes\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32916\n        }\n    ],\n    \"dynamicFieldList\": [\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%LOG_TYPE%%\",\n            \"uiFieldName\": \"Log Type\",\n            \"defaultValue\": \"user,admin,events\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"dropdown\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 238\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%INSECURE%%\",\n            \"uiFieldName\": \"Use Insecure Flag?\",\n            \"defaultValue\": \"Yes,No\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"dropdown\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 239\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%NUM_DAYS%%\",\n            \"uiFieldName\": \"Date Range (days)\",\n            \"defaultValue\": \"7\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"text\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 240\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%SCP_SERVER%%\",\n            \"uiFieldName\": \"SCP Server\",\n            \"defaultValue\": \"\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"text\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 241\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%SCP_PATH%%\",\n            \"uiFieldName\": \"SCP Path\",\n            \"defaultValue\": \"\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"text\",\n            \"mandatory\": false,\n            \"addAsNewOnImport\": false,\n            \"id\": 242\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%SCP_USER%%\",\n            \"uiFieldName\": \"SCP User\",\n            \"defaultValue\": \"\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"text\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 243\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%SCP_PASSWD%%\",\n            \"uiFieldName\": \"SCP Password\",\n            \"defaultValue\": \"\",\n            \"needsEncryption\": true,\n            \"fieldType\": \"text\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 244\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%CHECK_KEYS%%\",\n            \"uiFieldName\": \"Check Host Keys\",\n            \"defaultValue\": \"Yes,No\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"dropdown\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 245\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%CLEAR_LOGS%%\",\n            \"uiFieldName\": \"Clear Logs?\",\n            \"defaultValue\": \"Yes,No\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"dropdown\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 246\n        }\n    ],\n    \"taskReportFieldList\": [],\n    \"idsOfCommandsToDelete\": [],\n    \"idsOfDynamicFieldsToDelete\": [],\n    \"tags\": [\n        \"Dev\",\n        \"Current\"\n    ],\n    \"restricted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/task",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 64,\n    \"name\": \"Test task1\",\n    \"description\": \"Testing\",\n    \"predefined\": false,\n    \"site_ID\": 0,\n    \"siteName\": null,\n    \"sessionId\": 1435,\n    \"listOfCommands\": [\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 1,\n            \"command_TYPE\": \"internal\",\n            \"command\": \"add_firewall_rule %%SCP_SERVER%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [],\n            \"wait_FOR\": \"\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 0,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32887\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 2,\n            \"command_TYPE\": \"local\",\n            \"command\": \"cd %%DBL%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32888\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 3,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo %%DEVICE_NAME%% | cut -d- -f1\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Get customer abbreviation\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%CUST_ABBR%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32889\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 4,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo %%SCP_PATH%%/\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SCP_PATH%%\",\n                    \"arg2\": \"\",\n                    \"condition\": \"isnotempty\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SCP_PATH1%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32890\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 5,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SCP_PATH%%\",\n                    \"arg2\": \"\",\n                    \"condition\": \"isempty\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SCP_PATH1%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32891\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 6,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo \\\"-o StrictHostKeyChecking=no\\\"\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set variable if we do not want to check ssh keys\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%CHECK_KEYS%%\",\n                    \"arg2\": \"No\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%ADD_KEYCHECK%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32892\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 7,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set empty variable if we want to check ssh keys\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%CHECK_KEYS%%\",\n                    \"arg2\": \"Yes\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%ADD_KEYCHECK%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32893\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 8,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo --insecure\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set --insecure flag\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%INSECURE%%\",\n                    \"arg2\": \"Yes\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SEC_FLAG%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32894\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 9,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Don't set --insecure flag\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%INSECURE%%\",\n                    \"arg2\": \"No\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SEC_FLAG%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32895\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 10,\n            \"command_TYPE\": \"local\",\n            \"command\": \"curl -u %%PASSWORD%%: https://%%HOST%%/api/v1/system/system-information -i %%SEC_FLAG%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Grab system information to test if we need insecure flag\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"sys-info.out\",\n            \"output_TYPE\": \"file\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32896\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 11,\n            \"command_TYPE\": \"local\",\n            \"command\": \"grep Problem sys-info.out\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Check to see if we need the insecure flag\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%NEED_INSECURE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32897\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": true,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": \"failure\",\n            \"queue\": 12,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo Certificate error, please fix or set insecure flag\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Fail on cert error\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%NEED_INSECURE%%\",\n                    \"arg2\": \"Problem\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": \"echo Certificate error, please fix or set insecure flag\",\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32898\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 13,\n            \"command_TYPE\": \"local\",\n            \"command\": \"awk '$1 == \\\"HTTP/1.1\\\" {print $2}' sys-info.out\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Get HTTP response code\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%HTTP_RESP%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32899\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": true,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": \"failure\",\n            \"queue\": 14,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo Bad response from cURL call\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Fail if we don't get a 200\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%HTTP_RESP%%\",\n                    \"arg2\": \"200\",\n                    \"condition\": \"notcontains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": \"echo Bad response from cURL call, response code  %%HTTP_RESP%%\",\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32900\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 15,\n            \"command_TYPE\": \"local\",\n            \"command\": \"date --date=\\\"%%NUM_DAYS%% day ago\\\" '+%Y-%m-%d'\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set begin date\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%BEGIN_DATE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32901\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 16,\n            \"command_TYPE\": \"local\",\n            \"command\": \"date '+%Y-%m-%d'\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set end date\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%END_DATE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32902\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 17,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo PulseSecure_%%LOG_TYPE%%_Log_%%DEVICE_NAME%%_%%BEGIN_DATE%%_%%END_DATE%%.txt\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Set logfile name\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%LOG_FILE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32903\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 18,\n            \"command_TYPE\": \"local\",\n            \"command\": \"curl -u %%PASSWORD%%: --location 'https://%%HOST%%/api/v1/logs/%%LOG_TYPE%%' --header \\\"Content-Type: application/json\\\" --data '{\\\"action\\\":\\\"fetch\\\", \\\"lines\\\": 3, \\\"query\\\": \\\"id != ('\\\\''SYS10306'\\\\'' or '\\\\''NWC13978'\\\\'' or '\\\\''NWC13979'\\\\'')\\\",\\\"filter\\\": \\\"Standard\\\",\\\"begin-date\\\": \\\"%%BEGIN_DATE%%\\\",\\\"end-date\\\": \\\"%%END_DATE%%\\\"}' --insecure\",\n            \"hide_OUTPUT\": true,\n            \"description\": \"Check for empty log file\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%LOG_CHECK%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32904\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": true,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": \"failure\",\n            \"queue\": 19,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo Log file is empty\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Fail if log file is empty\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%LOG_CHECK%%\",\n                    \"arg2\": \"empty\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": \"%%LOG_TYPE%% log file is empty\",\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32905\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 20,\n            \"command_TYPE\": \"local\",\n            \"command\": \"curl -u %%PASSWORD%%: --location 'https://%%HOST%%/api/v1/logs/%%LOG_TYPE%%' --header \\\"Content-Type: application/json\\\" --data '{\\\"action\\\":\\\"save\\\",\\\"query\\\": \\\"id != ('\\\\''SYS10306'\\\\'' or '\\\\''NWC13978'\\\\'' or '\\\\''NWC13979'\\\\'')\\\",\\\"filter\\\": \\\"Standard\\\",\\\"begin-date\\\": \\\"%%BEGIN_DATE%%\\\",\\\"end-date\\\": \\\"%%END_DATE%%\\\"}' --insecure --output %%LOG_FILE%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Get Log File\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 5,\n            \"session_ID\": 1324,\n            \"id\": 32906\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 21,\n            \"command_TYPE\": \"local\",\n            \"command\": \"gzip -9 %%LOG_FILE%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Compress log file\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32907\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 22,\n            \"command_TYPE\": \"local\",\n            \"command\": \"ssh %%ADD_KEYCHECK%% %%SCP_USER%%@%%SCP_SERVER%% 'mkdir %%SCP_PATH1%%%%CUST_ABBR%%'\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Create remote directory if not already there\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"assword\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"yes/no\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SSH_RESPONSE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32908\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 23,\n            \"command_TYPE\": \"local\",\n            \"command\": \"yes\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Send yes if we need to\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SSH_RESPONSE%%\",\n                    \"arg2\": \"yes/no\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"%%CURRENT_PROMPT%%\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"assword\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SSH_RESPONSE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32909\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 24,\n            \"command_TYPE\": \"local\",\n            \"command\": \"%%SCP_PASSWD%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Send SSH password\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SSH_RESPONSE%%\",\n                    \"arg2\": \"assword:\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"%%CURRENT_PROMPT%%\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%MKDIR_CHECK%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32910\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": true,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": \"failure\",\n            \"queue\": 25,\n            \"command_TYPE\": \"local\",\n            \"command\": \"echo Cannot create directory %%SCP_PATH1%%%%CUST_ABBR%% on SCP server\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%MKDIR_CHECK%%\",\n                    \"arg2\": \"cannot\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": \"Cannot create directory %%SCP_PATH1%%%%CUST_ABBR%% on SCP server\",\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32911\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 26,\n            \"command_TYPE\": \"local\",\n            \"command\": \"scp %%ADD_KEYCHECK%% %%LOG_FILE%%.gz %%SCP_USER%%@%%SCP_SERVER%%:%%SCP_PATH1%%%%CUST_ABBR%%/\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"SCP logs to remote server\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"assword\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"yes/no\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SCP_RESPONSE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32912\n        },\n        {\n            \"saveFlag\": true,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 27,\n            \"command_TYPE\": \"local\",\n            \"command\": \"yes\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Send yes if we need to\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SCP_RESPONSE%%\",\n                    \"arg2\": \"yes/no\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"%%CURRENT_PROMPT%%\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"assword\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"%%SCP_RESPONSE%%\",\n            \"output_TYPE\": \"variable\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32913\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 28,\n            \"command_TYPE\": \"local\",\n            \"command\": \"%%SCP_PASSWD%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Send SCP password if we need to\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%SCP_RESPONSE%%\",\n                    \"arg2\": \"assword:\",\n                    \"condition\": \"contains\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"},{\\\"waitfor\\\":\\\"%%CURRENT_PROMPT%%\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 60,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32914\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 29,\n            \"command_TYPE\": \"local\",\n            \"command\": \"rm %%LOG_FILE%%.gz\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Clean up\",\n            \"condition\": [],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32915\n        },\n        {\n            \"saveFlag\": false,\n            \"statusFlag\": false,\n            \"outputAppendToFile\": false,\n            \"collected\": false,\n            \"addToFileRepository\": false,\n            \"saveToFilePermissions\": 664,\n            \"status\": null,\n            \"queue\": 30,\n            \"command_TYPE\": \"local\",\n            \"command\": \"curl -u %%PASSWORD%%: -H \\\"Content-Type: application/json\\\" -X PUT https://%%HOST%%/api/v1/logs/%%LOG_TYPE%% -d '{\\\"action\\\":\\\"clear\\\"}' %%SEC_FLAG%%\",\n            \"hide_OUTPUT\": false,\n            \"description\": \"Clear log\",\n            \"condition\": [\n                {\n                    \"arg1\": \"%%CLEAR_LOGS%%\",\n                    \"arg2\": \"Yes\",\n                    \"condition\": \"equal\",\n                    \"operator\": \"2\"\n                }\n            ],\n            \"wait_FOR\": \"[{\\\"waitfor\\\":\\\"BBP\\\",\\\"status\\\":\\\"success\\\",\\\"message\\\":\\\"\\\"}]\",\n            \"save_OUTPUT\": \"\",\n            \"output_TYPE\": \"\",\n            \"timeout\": 30,\n            \"error_MESSAGE\": null,\n            \"sleep\": 0,\n            \"session_ID\": 1324,\n            \"id\": 32916\n        }\n    ],\n    \"dynamicFieldList\": [\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%LOG_TYPE%%\",\n            \"uiFieldName\": \"Log Type\",\n            \"defaultValue\": \"user,admin,events\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"dropdown\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 238\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%INSECURE%%\",\n            \"uiFieldName\": \"Use Insecure Flag?\",\n            \"defaultValue\": \"Yes,No\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"dropdown\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 239\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%NUM_DAYS%%\",\n            \"uiFieldName\": \"Date Range (days)\",\n            \"defaultValue\": \"7\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"text\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 240\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%SCP_SERVER%%\",\n            \"uiFieldName\": \"SCP Server\",\n            \"defaultValue\": \"\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"text\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 241\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%SCP_PATH%%\",\n            \"uiFieldName\": \"SCP Path\",\n            \"defaultValue\": \"\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"text\",\n            \"mandatory\": false,\n            \"addAsNewOnImport\": false,\n            \"id\": 242\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%SCP_USER%%\",\n            \"uiFieldName\": \"SCP User\",\n            \"defaultValue\": \"\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"text\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 243\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%SCP_PASSWD%%\",\n            \"uiFieldName\": \"SCP Password\",\n            \"defaultValue\": \"\",\n            \"needsEncryption\": true,\n            \"fieldType\": \"text\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 244\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%CHECK_KEYS%%\",\n            \"uiFieldName\": \"Check Host Keys\",\n            \"defaultValue\": \"Yes,No\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"dropdown\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 245\n        },\n        {\n            \"taskId\": 63,\n            \"environmentVariableName\": \"%%CLEAR_LOGS%%\",\n            \"uiFieldName\": \"Clear Logs?\",\n            \"defaultValue\": \"Yes,No\",\n            \"needsEncryption\": false,\n            \"fieldType\": \"dropdown\",\n            \"mandatory\": true,\n            \"addAsNewOnImport\": false,\n            \"id\": 246\n        }\n    ],\n    \"taskReportFieldList\": [],\n    \"idsOfCommandsToDelete\": [],\n    \"idsOfDynamicFieldsToDelete\": [],\n    \"tags\": [\n        \"Dev\",\n        \"Current\"\n    ],\n    \"restricted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/task",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/task/64",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"task",
								"64"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tasks History",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/history",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Task Jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/taskJobs",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"taskJobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Job Info by Job ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/taskJob/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"taskJob",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Task Job by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null.and.to.not.be.undefined;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is in a valid XML format\", function () {",
									"    const responseData = xml2Json(pm.response.text());",
									"    ",
									"    pm.expect(responseData).to.not.be.null;",
									"});",
									"",
									"",
									"pm.test(\"Request URL contains the correct username and password\", function () {",
									"    pm.expect(pm.request.url).to.include(\"username=tony\");",
									"    pm.expect(pm.request.url).to.include(\"password=UK4xUQxII#1FwmGF\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/job/run/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"job",
								"run",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task Job",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scheduleIds\": [],\n    \"itemsIN_BackupJob\": [\n        {\n            \"siteId\": 2,\n            \"jobId\": 50,\n            \"itemId\": 4,\n            \"itemType\": 0,\n            \"itemName\": \"bb-aws-fgt-03\",\n            \"itemHost\": \"172.255.0.115\",\n            \"groupId\": 0,\n            \"vendorName\": \"Fortinet\",\n            \"productName\": \"FortiGate\",\n            \"siteName\": \"Omnicorp\",\n            \"itemProductType\": \"complex\",\n            \"groupName\": \"testy\",\n            \"port\": 0,\n            \"itemDescription\": \"\",\n            \"configurationChanged\": false,\n            \"externalId\": \"254\",\n            \"inventoryModel\": \"Model: FortiGate-VM64-AWS\\n\",\n            \"inventoryVersion\": \"Version: FortiGate-VM64-AWS v7.2.4,build1396,230131 (GA.F)\\n\"\n        },\n        {\n            \"siteId\": 5,\n            \"jobId\": 50,\n            \"itemId\": 41,\n            \"itemType\": 0,\n            \"itemName\": \"bb-aws-fgt-01a\",\n            \"itemHost\": \"172.31.252.11\",\n            \"groupId\": 0,\n            \"vendorName\": \"Fortinet\",\n            \"productName\": \"FortiGate\",\n            \"siteName\": \"Customer Dev\",\n            \"itemProductType\": \"complex\",\n            \"groupName\": \"testy\",\n            \"port\": 0,\n            \"itemDescription\": null,\n            \"configurationChanged\": false,\n            \"externalId\": \"187\",\n            \"inventoryModel\": \"Model: FortiGate-VM64-AWS\\n\",\n            \"inventoryVersion\": \"Version: FortiGate-VM64-AWS v7.4.1,build2463,230830 (GA.F)\\n\"\n        },\n        {\n            \"siteId\": 5,\n            \"jobId\": 50,\n            \"itemId\": 42,\n            \"itemType\": 0,\n            \"itemName\": \"bb-aws-fgt-02b\",\n            \"itemHost\": \"172.31.252.12\",\n            \"groupId\": 0,\n            \"vendorName\": \"Fortinet\",\n            \"productName\": \"FortiGate\",\n            \"siteName\": \"Customer Dev\",\n            \"itemProductType\": \"complex\",\n            \"groupName\": null,\n            \"port\": 0,\n            \"itemDescription\": null,\n            \"configurationChanged\": false,\n            \"externalId\": null,\n            \"inventoryModel\": \"Model: FortiGate-VM64-AWS\\n\",\n            \"inventoryVersion\": \"Version: FortiGate-VM64-AWS v7.4.1,build2463,230830 (GA.F)\\n\"\n        }\n    ],\n    \"type\": \"TASK\",\n    \"amountOfDevices\": 0,\n    \"tasksInTaskJob\": [\n        {\n            \"taskId\": 50,\n            \"ordinal\": 1,\n            \"dependencyTaskId\": 0\n        }\n    ],\n    \"sendDiffFilesInNotification\": false,\n    \"showExcludedLines\": false,\n    \"scheduleNames\": [],\n    \"nextExecutionDate\": null,\n    \"notificationName\": \"Notify Tony\",\n    \"lastStatus\": null,\n    \"runMode\": \"parallel\",\n    \"exhaustMode\": \"devicesOnTask\",\n    \"abortRunOnError\": true,\n    \"attachedTaskJobId\": null,\n    \"attachedStatusId\": \"ALL\",\n    \"disabledTaskJob\": false,\n    \"approvalsList\": [],\n    \"ownerId\": 5,\n    \"ownerName\": \"Tony Dalton\",\n    \"site_ID\": 0,\n    \"name\": \"Testing TaskJob\",\n    \"site_NAME\": null,\n    \"description\": \"\",\n    \"notification_ID\": 5,\n    \"disposable\": false,\n    \"backup_JOB_ID\": 50,\n    \"showUnavailableInNotification\": false,\n    \"groupName\": null,\n    \"excludedFromCollectionOnOutput\": false,\n    \"inGroup\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/taskJob",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"taskJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task Job",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scheduleIds\": [],\n    \"itemsIN_BackupJob\": [],\n    \"type\": \"TASK\",\n    \"amountOfDevices\": 0,\n    \"tasksInTaskJob\": [\n        {\n            \"taskId\": 33,\n            \"ordinal\": 1,\n            \"dependencyTaskId\": 0\n        }\n    ],\n    \"sendDiffFilesInNotification\": false,\n    \"showExcludedLines\": false,\n    \"scheduleNames\": [],\n    \"nextExecutionDate\": null,\n    \"notificationName\": null,\n    \"lastStatus\": null,\n    \"runMode\": \"parallel\",\n    \"exhaustMode\": \"devicesOnTask\",\n    \"abortRunOnError\": true,\n    \"attachedTaskJobId\": null,\n    \"attachedStatusId\": \"ALL\",\n    \"disabledTaskJob\": false,\n    \"approvalsList\": [],\n    \"ownerId\": 1,\n    \"ownerName\": \"Administrator\",\n    \"site_ID\": 3,\n    \"name\": \"Meraki Create SSID\",\n    \"site_NAME\": \"Choam\",\n    \"description\": \"\",\n    \"notification_ID\": 0,\n    \"disposable\": false,\n    \"backup_JOB_ID\": 37,\n    \"showUnavailableInNotification\": false,\n    \"groupName\": null,\n    \"excludedFromCollectionOnOutput\": false,\n    \"inGroup\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/taskJob",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"taskJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task Job",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/taskJob/54",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"taskJob",
								"54"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Task Jobs by Site",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/taskJobs/allJobsBySite/3",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"taskJobs",
								"allJobsBySite",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Scheduled Task Jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/taskJobs/allScheduleJobs",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"taskJobs",
								"allScheduleJobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Device Group to Task Job by Group ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    3\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/addDeviceGroupsByIds/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"addDeviceGroupsByIds",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device Group from Task Job by Group ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    3\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/deleteDeviceGroupsByIds/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"deleteDeviceGroupsByIds",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Device Group to Task Job by Group Name",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"testy\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/addDeviceGroupsByNames/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"addDeviceGroupsByNames",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device Group from Task Job by Group Name",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"testy\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/deleteDeviceGroupsByNames/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"deleteDeviceGroupsByNames",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Devices to Task Job by Device External ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    1472,\n    132\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/addDevicesByExternalIds/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"addDevicesByExternalIds",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Devices from Task Job by Device External ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    1472,\n    132\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/deleteDevicesByExternalIds/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"deleteDevicesByExternalIds",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Devices to Task Job by Device ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    6,\n    9\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/addDevicesByIds/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"addDevicesByIds",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Devices from Task Job by Device ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    6,\n    9\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/deleteDevicesByIds/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"deleteDevicesByIds",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Devices to Task Job by Device IP",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"172.255.0.87\",\n    \"172.255.0.222\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/addDevicesByIps/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"addDevicesByIps",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Devices from Task Job by Device IP",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"172.255.0.87\",\n    \"172.255.0.222\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/deleteDevicesByIps/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"deleteDevicesByIps",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices in Task Job",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/getDevices/taskJobId/49",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"getDevices",
								"taskJobId",
								"49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Multiple Task Jobs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    44,\n    49\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/jobs/run",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"jobs",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Count of Tasks in Queue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/queue/size",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"queue",
								"size"
							]
						}
					},
					"response": []
				},
				{
					"name": "Task Queue Page (not working)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/tasks/queue/2/3?onlyActiveSessions=false&modifyDate=20240131",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"tasks",
								"queue",
								"2",
								"3"
							],
							"query": [
								{
									"key": "onlyActiveSessions",
									"value": "false"
								},
								{
									"key": "modifyDate",
									"value": "20240131"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IntelliChecks",
			"item": [
				{
					"name": "Get IntelliCheck Status by Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/intelliCheckStatus/{filterType}?filterType=byType",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"intelliCheckStatus",
								"{filterType}"
							],
							"query": [
								{
									"key": "filterType",
									"value": "byType"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IntelliCheck Status by Site",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/intelliCheckStatus/{filterType}?filterType=bySite",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"intelliCheckStatus",
								"{filterType}"
							],
							"query": [
								{
									"key": "filterType",
									"value": "bySite"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IntelliCheck Status by Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/intelliCheckStatus/{filterType}?filterType=byGroup",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"intelliCheckStatus",
								"{filterType}"
							],
							"query": [
								{
									"key": "filterType",
									"value": "byGroup"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all IC jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/getAllIntelliChecksJobs",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"getAllIntelliChecksJobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Group to IC job by Group ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    3\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/addDeviceGroupsByIds/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"addDeviceGroupsByIds",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove group from IC job by Group ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    3\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/removeDeviceGroups/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"removeDeviceGroups",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Group to IC job by Group Name",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"testy\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/addDeviceGroupsByNames/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"addDeviceGroupsByNames",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Group from IC job by Group Name",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"testy\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/removeDeviceGroupsByGroupNames/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"removeDeviceGroupsByGroupNames",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Device from IC job by External ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    863\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/removeDevicesByExternalIds/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"removeDevicesByExternalIds",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Device to IC job by External ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    863\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/addDevicesByExternalIds/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"addDevicesByExternalIds",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Devices from IC job by Device ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    3,\n    35\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/removeDevicesByIds/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"removeDevicesByIds",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Devices to IC job by Device ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    3,\n    35\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/addDevicesByIds/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"addDevicesByIds",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Devices from IC job by IP",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"172.255.0.14\",\n    \"172.255.0.219\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/removeDevicesByIps/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"removeDevicesByIps",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Devices to IC job by IP",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"172.255.0.14\",\n    \"172.255.0.219\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/addDevicesByIps/jobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"addDevicesByIps",
								"jobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all IC jobs by site",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/bySite/0",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"bySite",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Scheduled IC Jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/getAllScheduledJobs",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"getAllScheduledJobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Devices in IC Job",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/getDevices/intellichecksJobId/22",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"getDevices",
								"intellichecksJobId",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run single IC job",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/run/23",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"run",
								"23"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Multiple IC jobs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n24,\n25\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/intelliChecks/jobs/run",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"intelliChecks",
								"jobs",
								"run"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/users",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by User ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/user/51",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"user",
								"51"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by Username",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "testuser",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/user/getByUserName",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"user",
								"getByUserName"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requiresApproval\": false,\n    \"sitesIds\": [\n        3,\n        4,\n        5\n    ],\n    \"sitesNames\": [\n        \"Choam\",\n        \"Cyberdine Systems\",\n        \"Customer Dev\"\n    ],\n    \"sourceIP\": null,\n    \"sessionStartTime\": 0,\n    \"ssoLdapGroups\": null,\n    \"accessRules\": [],\n    \"password\": \"safeway_blank\",\n    \"name\": \"Test Add User\",\n    \"user_TYPE\": \"local\",\n    \"user_ROLE\": \"backup_monitor\",\n    \"domain\": null,\n    \"sso\": false,\n    \"user_NAME\": \"testuser\",\n    \"email\": \"no@email.com\",\n    \"notification\": false,\n    \"uses_TWO_FACTOR\": false,\n    \"force_TWO_FACTOR\": false,\n    \"notification_TYPE\": \"details\",\n    \"sitesNamesAsStringWithCommas\": \"Choam,Cyberdine Systems,Customer Dev\",\n    \"use_RSA_TOKEN\": false,\n    \"two_FACTOR_KEY\": null,\n    \"id\": 51\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/user/add",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"user",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requiresApproval\": false,\n    \"sitesIds\": [\n        3,\n        4\n    ],\n    \"sitesNames\": [\n        \"Choam\",\n        \"Cyberdine Systems\"\n    ],\n    \"sourceIP\": null,\n    \"sessionStartTime\": 0,\n    \"ssoLdapGroups\": null,\n    \"accessRules\": [],\n    \"password\": \"safeway_blank\",\n    \"name\": \"Test Add User\",\n    \"user_TYPE\": \"local\",\n    \"user_ROLE\": \"backup_monitor\",\n    \"domain\": null,\n    \"sso\": false,\n    \"user_NAME\": \"testuser\",\n    \"email\": \"no@email.com\",\n    \"notification\": false,\n    \"uses_TWO_FACTOR\": false,\n    \"force_TWO_FACTOR\": false,\n    \"notification_TYPE\": \"details\",\n    \"sitesNamesAsStringWithCommas\": \"Choam,Cyberdine Systems\",\n    \"use_RSA_TOKEN\": false,\n    \"two_FACTOR_KEY\": null,\n    \"id\": 52\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/user/edit",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"user",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/users/size",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"users",
								"size"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users by Site",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/users/getAllUsersBySiteId/3",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"users",
								"getAllUsersBySiteId",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User by User ID",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    52\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/users",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Get All Notifications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/notifications",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Notification by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/notification/41",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"notification",
								"41"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Notification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alerts\": true,\n  \"description\": \"test add notify\",\n  \"id\": 6,\n  \"name\": \"test notify\",\n  \"site_ID\": 0,\n  \"site_NAME\": \"Global\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/notification",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"notification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Notification",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"usersIDS\": \"\",\n    \"httpAlertsIDS\": \"\",\n    \"createDateToShow\": \"2024-01-30T15:08+0000\",\n    \"modifyDateToShow\": \"2024-01-30T15:08+0000\",\n    \"showFail\": false,\n    \"showSuspect\": false,\n    \"showSuccess\": false,\n    \"showUnavailable\": false,\n    \"site_ID\": 0,\n    \"name\": \"test notify 2\",\n    \"site_NAME\": \"Global\",\n    \"email\": false,\n    \"description\": \"test update to notify\",\n    \"syslog\": false,\n    \"snmp\": false,\n    \"http\": false,\n    \"alerts\": true,\n    \"creation_DATE\": 1706627289000,\n    \"modification_DATE\": 1706627289000,\n    \"user_IDS_WITH_STATUS\": null,\n    \"id\": 9\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/notification",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"notification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Notification",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/notification/9",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"notification",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Notifications by Site",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/notificationsBySite/{siteId}?siteId=0",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"notificationsBySite",
								"{siteId}"
							],
							"query": [
								{
									"key": "siteId",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Schedules",
			"item": [
				{
					"name": "Get All Schedules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/schedules",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"schedules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Schedule by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/schedule/24",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"schedule",
								"24"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Schedule",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"D\",\n    \"every_value\": 1,\n    \"daysOfWeek\": [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n    ],\n    \"hours\": 3,\n    \"minutes\": 35,\n    \"site_ID\": 5,\n    \"name\": \"Test2 - Backup Nightly\",\n    \"site_NAME\": \"Global\",\n    \"description\": \"\",\n    \"create_DATE\": 1701688345000,\n    \"in_USE\": 0,\n    \"modify_DATE\": 1701688345000,\n    \"id\": 23\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/schedule",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"schedule"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Schedule by ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"W\",\n    \"every_value\": 1,\n    \"daysOfWeek\": [\n        0,\n        1,\n        0,\n        1,\n        0,\n        1,\n        0\n    ],\n    \"hours\": 3,\n    \"minutes\": 35,\n    \"site_ID\": 5,\n    \"name\": \"Test2 - Backup Nightly\",\n    \"site_NAME\": \"Global\",\n    \"description\": \"\",\n    \"create_DATE\": 1706687706000,\n    \"in_USE\": 0,\n    \"modify_DATE\": 1706687706000,\n    \"id\": 24\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/schedule",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"schedule"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Schedule by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/schedule/24",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"schedule",
								"24"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Get Count of Reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/reports/size",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"reports",
								"size"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/reports",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Report by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/report/45",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"report",
								"45"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add New Report",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"durationInDays\": 30,\n    \"deviation\": 30.0,\n    \"allColumns\": [],\n    \"selectedColumns\": [],\n    \"itemsInReport\": [],\n    \"intelliChecksJobsInReport\": [],\n    \"selectedCountersToUnitsAndAllIndexes\": {},\n    \"reportTimeRangeType\": null,\n    \"startHourInMinutes\": 0,\n    \"endHourInMinutes\": 0,\n    \"weekDaysInNumbers\": null,\n    \"monthDaysInNumbers\": null,\n    \"timestamp\": 0,\n    \"removeUnchangedDevices\": false,\n    \"showExcludedLines\": false,\n    \"backupsByDayReportProps\": null,\n    \"site_ID\": 0,\n    \"name\": \"test report2\",\n    \"site_NAME\": null,\n    \"description\": \"testing2\",\n    \"notification_ID\": 0,\n    \"type\": \"agents\",\n    \"schedule_ID\": 0,\n    \"next_RUN\": null,\n    \"schedule_NAME\": null,\n    \"notification_NAME\": null,\n    \"id\": 45\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/report",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Report",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"durationInDays\": 30,\n    \"deviation\": 30.0,\n    \"allColumns\": [],\n    \"selectedColumns\": [],\n    \"itemsInReport\": [],\n    \"intelliChecksJobsInReport\": [],\n    \"selectedCountersToUnitsAndAllIndexes\": {},\n    \"reportTimeRangeType\": null,\n    \"startHourInMinutes\": 0,\n    \"endHourInMinutes\": 0,\n    \"weekDaysInNumbers\": null,\n    \"monthDaysInNumbers\": null,\n    \"timestamp\": 0,\n    \"removeUnchangedDevices\": false,\n    \"showExcludedLines\": false,\n    \"backupsByDayReportProps\": null,\n    \"site_ID\": 0,\n    \"name\": \"test report3\",\n    \"site_NAME\": \"Global\",\n    \"description\": \"testing3\",\n    \"notification_ID\": 0,\n    \"type\": \"agents\",\n    \"schedule_ID\": 0,\n    \"next_RUN\": null,\n    \"schedule_NAME\": null,\n    \"notification_NAME\": null,\n    \"id\": 45\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/report",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Report (not working)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/report/44",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"report",
								"44"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Queues",
			"item": [
				{
					"name": "Get Backup Queue Size",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/queue/size",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"queue",
								"size"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Realtime Backup Queue Size",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/system/queue/backup/realtime",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"system",
								"queue",
								"backup",
								"realtime"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Realtime IntelliChecks Queue Size",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/system/queue/intellichecks/realtime",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"system",
								"queue",
								"intellichecks",
								"realtime"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Realtime Task Queue Size",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/dashboard/system/queue/task/realtime",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"dashboard",
								"system",
								"queue",
								"task",
								"realtime"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Backup Queue Page",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/queue/3/4/IP/true?onlyActiveSessions=false&modifyDate=20240115",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"queue",
								"3",
								"4",
								"IP",
								"true"
							],
							"query": [
								{
									"key": "onlyActiveSessions",
									"value": "false"
								},
								{
									"key": "modifyDate",
									"value": "20240115"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Logging",
			"item": [
				{
					"name": "Get Full Audit Log",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/token/api/auditing/report/full",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"token",
								"api",
								"auditing",
								"report",
								"full"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Access Log Download Link by Terminal ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/downloadTerminalLog/link/257406",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"downloadTerminalLog",
								"link",
								"257406"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Access Log by Terminal ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/backups/downloadTerminalLog/257406",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"backups",
								"downloadTerminalLog",
								"257406"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Integrator",
			"item": [
				{
					"name": "Get all options",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/integrator/getAllOptions",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"integrator",
								"getAllOptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Vendor ID by Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/integrator/get/getVendorIdByName/Cisco",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"integrator",
								"get",
								"getVendorIdByName",
								"Cisco"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/integrator/getAllProducts",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"integrator",
								"getAllProducts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Vendors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/integrator/getAllVendors",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"integrator",
								"getAllVendors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Versions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{bb_server}}/rest/data/api/integrator/getAllVersions",
							"protocol": "https",
							"host": [
								"{{bb_server}}"
							],
							"path": [
								"rest",
								"data",
								"api",
								"integrator",
								"getAllVersions"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "<insert API key here>",
				"type": "string"
			},
			{
				"key": "key",
				"value": "AUTH",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bb_server",
			"value": "<insert BB server here>"
		}
	]
}